name: Deployment

on:
  push:
    banches:
      -master
jobs:
  check-files:
    runs-on: ubuntu-latest
    outputs:
      packages: ${{ steps.filter.outputs.changes }}
    steps:
      - uses: actions/checkout@v3
      - uses: dorny/paths-filter@v2.2.1
        id: filter
        with:
            filters: |
              UploadScore:
                - './UploadScore'
              GetScores:
                - './GetScores'
  lint-verirication:
    needs: check-files
    strategy:
      matrix:
        package: ${{ fromJSON(needs.changes.outputs.packages) }}
    runs-on: ubuntu-latest
    defaults:
       run:
         working-directory: ${{ matrix.package }} 
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v3
        with:
          go-version: '1.18.1'
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v3
        with:
          version: latest
          working-directory: ${{ matrix.package }}
  deploy-serverless:
    needs: lint-verirication
    runs-on: ubuntu-latest
    steps: 
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v3
        with:
          go-version: '1.18.1'
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
      - uses: dorny/paths-filter@v2.2.1
        id: filter
        with:
          filters: .github/filters.yml
      - uses: blombard/lambda-monorepo@master
        with:
          lambda-functions: '${{ toJson(steps.filter.outputs) }}'
          zip-params: 'main'
      